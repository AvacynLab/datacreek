name: test: units

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-units:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
      neo4j:
        image: neo4j:5
        env:
          NEO4J_AUTH: neo4j/neo4j
        ports:
          - 7474:7474
          - 7687:7687
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: pip install -r requirements.txt fakeredis flask flask-wtf flask-login wtforms pre-commit pytest requests python-dateutil rich scikit-learn watchdog PyYAML pydantic==2.4.0
      - id: diff
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "base=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
          else
            echo "base=${{ github.event.before }}" >> $GITHUB_OUTPUT
          fi
          echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT
      - run: pre-commit run --from-ref ${{ steps.diff.outputs.base }} --to-ref ${{ steps.diff.outputs.head }} --show-diff-on-failure
      - name: Build container images
        run: docker compose build
      - name: Run tests
        run: |
          scripts/run_changed_tests.sh \
            ${{ steps.diff.outputs.base }} \
            ${{ steps.diff.outputs.head }}
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - name: Set image name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE_NAME=${GITHUB_REPOSITORY,,}-frontend" >> $GITHUB_ENV
      - uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:latest
      - uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/${{ env.FRONTEND_IMAGE_NAME }}:latest
  pipeline-e2e:
    needs: test-units
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: pip install -r requirements.txt fakeredis requests python-dateutil pydantic==2.4.0 rich scikit-learn watchdog PyYAML
      - run: pytest tests/test_pipeline_e2e.py -q
  deploy:
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            docker compose pull
            docker compose up -d
